{"ast":null,"code":"import { NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./Services/loginwithotp.service\";\nexport class ValidateUserDirective {\n  constructor(loginWithOtp) {\n    this.loginWithOtp = loginWithOtp;\n    // @Input('appValidateUser') UserEmail = '';\n    this.invalidUser = false;\n    console.log(\"validator\");\n  }\n  validate(control) {\n    return this.forbiddenNameValidator(control.value);\n  }\n  forbiddenNameValidator(email) {\n    const emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/i;\n    const valid = emailRegex.test(email);\n    if (!valid) return {\n      invalidUser: {\n        message: 'Entered email address is not in correct format'\n      }\n    };\n    if (!email) return null;\n    if (email.length === 0) return null;\n    if (this.loginWithOtp.validateUserEmail(email)) return null;else return {\n      invalidUser: {\n        message: 'Entered email address is not regsitered with us. please try with registered email address'\n      }\n    };\n    return null;\n  }\n  static #_ = this.ɵfac = function ValidateUserDirective_Factory(t) {\n    return new (t || ValidateUserDirective)(i0.ɵɵdirectiveInject(i1.LoginwithotpService));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ValidateUserDirective,\n    selectors: [[\"\", \"appValidateUser\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: ValidateUserDirective,\n      multi: true\n    }])]\n  });\n}","map":{"version":3,"names":["NG_VALIDATORS","ValidateUserDirective","constructor","loginWithOtp","invalidUser","console","log","validate","control","forbiddenNameValidator","value","email","emailRegex","valid","test","message","length","validateUserEmail","_","i0","ɵɵdirectiveInject","i1","LoginwithotpService","_2","selectors","features","ɵɵProvidersFeature","provide","useExisting","multi"],"sources":["D:\\Assignment\\loginApp\\loginWithOtp\\src\\app\\validate-user.directive.ts"],"sourcesContent":["import { Directive, Input } from '@angular/core';\nimport { AbstractControl, EmailValidator, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { LoginwithotpService } from './Services/loginwithotp.service';\n\n@Directive({\n  selector: '[appValidateUser]',\n  providers:[{provide: NG_VALIDATORS, useExisting:ValidateUserDirective, multi:true}]\n})\nexport class ValidateUserDirective implements Validator {\n// @Input('appValidateUser') UserEmail = '';\ninvalidUser : boolean =  false;\n\n  constructor(private loginWithOtp : LoginwithotpService) { \nconsole.log(\"validator\")\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    \n    return  this.forbiddenNameValidator(control.value);\n  }\n  forbiddenNameValidator(email : string) : ValidationErrors | null\n  {\n    const emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/i;\n    const valid = emailRegex.test(email);\n    if(!valid)\n    return {invalidUser : {\n      message : 'Entered email address is not in correct format'\n    }}\n    if(!email) return null;\n    if(email.length === 0) return null;\n  if(this.loginWithOtp.validateUserEmail(email)) return null\n  else return {\n    invalidUser : {\n      message : 'Entered email address is not regsitered with us. please try with registered email address'\n    }\n  };    \n    return null;\n  }\n}\n"],"mappings":"AACA,SAA0CA,aAAa,QAAqC,gBAAgB;;;AAO5G,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,YAAkC;IAAlC,KAAAA,YAAY,GAAZA,YAAY;IAHlC;IACA,KAAAC,WAAW,GAAc,KAAK;IAG9BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACtB;EAEAC,QAAQA,CAACC,OAAwB;IAE/B,OAAQ,IAAI,CAACC,sBAAsB,CAACD,OAAO,CAACE,KAAK,CAAC;EACpD;EACAD,sBAAsBA,CAACE,KAAc;IAEnC,MAAMC,UAAU,GAAG,0CAA0C;IAC7D,MAAMC,KAAK,GAAGD,UAAU,CAACE,IAAI,CAACH,KAAK,CAAC;IACpC,IAAG,CAACE,KAAK,EACT,OAAO;MAACT,WAAW,EAAG;QACpBW,OAAO,EAAG;;IACX,CAAC;IACF,IAAG,CAACJ,KAAK,EAAE,OAAO,IAAI;IACtB,IAAGA,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IACpC,IAAG,IAAI,CAACb,YAAY,CAACc,iBAAiB,CAACN,KAAK,CAAC,EAAE,OAAO,IAAI,MACrD,OAAO;MACVP,WAAW,EAAG;QACZW,OAAO,EAAG;;KAEb;IACC,OAAO,IAAI;EACb;EAAC,QAAAG,CAAA,G;qBA7BUjB,qBAAqB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,mBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBtB,qBAAqB;IAAAuB,SAAA;IAAAC,QAAA,GAAAN,EAAA,CAAAO,kBAAA,CAFtB,CAAC;MAACC,OAAO,EAAE3B,aAAa;MAAE4B,WAAW,EAAC3B,qBAAqB;MAAE4B,KAAK,EAAC;IAAI,CAAC,CAAC;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}