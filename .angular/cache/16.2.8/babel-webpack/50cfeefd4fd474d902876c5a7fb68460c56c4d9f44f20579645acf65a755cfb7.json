{"ast":null,"code":"import * as DOMPurify from 'dompurify';\nimport * as sqlString from \"sqlstring\";\nimport * as i0 from \"@angular/core\";\nexport class SecurityServiceService {\n  constructor() {}\n  Senitizedxss(json) {\n    return DOMPurify.sanitize(json);\n  }\n  SenitizedsqlInjection(json) {\n    return sqlString.escape(json);\n  }\n  static #_ = this.ɵfac = function SecurityServiceService_Factory(t) {\n    return new (t || SecurityServiceService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SecurityServiceService,\n    factory: SecurityServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["DOMPurify","sqlString","SecurityServiceService","constructor","Senitizedxss","json","sanitize","SenitizedsqlInjection","escape","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\Assignment\\loginApp\\loginWithOtp\\src\\app\\Services\\SecurityServices\\security-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport * as DOMPurify from 'dompurify';\nimport * as sqlString from \"sqlstring\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityServiceService {\n\n  constructor() { }\n\n  Senitizedxss(json: any) : any {\n    return DOMPurify.sanitize(json);\n  }\n\n  SenitizedsqlInjection(json: any) : any {\n    return sqlString.escape(json);\n  }\n}\n"],"mappings":"AACA,OAAO,KAAKA,SAAS,MAAM,WAAW;AACtC,OAAO,KAAKC,SAAS,MAAM,WAAW;;AAKtC,OAAM,MAAOC,sBAAsB;EAEjCC,YAAA,GAAgB;EAEhBC,YAAYA,CAACC,IAAS;IACpB,OAAOL,SAAS,CAACM,QAAQ,CAACD,IAAI,CAAC;EACjC;EAEAE,qBAAqBA,CAACF,IAAS;IAC7B,OAAOJ,SAAS,CAACO,MAAM,CAACH,IAAI,CAAC;EAC/B;EAAC,QAAAI,CAAA,G;qBAVUP,sBAAsB;EAAA;EAAA,QAAAQ,EAAA,G;WAAtBR,sBAAsB;IAAAS,OAAA,EAAtBT,sBAAsB,CAAAU,IAAA;IAAAC,UAAA,EAFrB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}